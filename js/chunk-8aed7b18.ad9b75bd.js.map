{"version":3,"sources":["webpack:///./src/components/BMI.vue?7631","webpack:///src/components/BMI.vue","webpack:///./src/components/BMI.vue?3288","webpack:///./src/components/BMI.vue","webpack:///./src/units.js"],"names":["render","this$1","this","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","$t","model","value","callback","$$v","height","expression","unit","lengthBMI","heightUnit","weight","weightBMI","weightUnit","gender","key","_v","_s","bmiMessageCalculate","bmi","directives","name","rawName","minNormalWeight","maxNormalWeight","robinsonFormula","millerFormula","hamwiFormula","devineFormula","_e","staticRenderFns","mixins","mixin","data","$config","defaultUnits","seen","bmiMessage","underWeight","normal","overWeight","obesity","severeObesity","computed","weightInKG","heightInMeter","heightInCentimeter","out","methods","openURL","reset","$refs","input","focus","component","label","length","digital","numericalBases","area","volume","pressure","speed","time","angle","energy","frequency","force","density","flow","temperature","aspectRatio"],"mappings":"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,MAAO,MAET,CACEoD,MAAO,OACPpD,MAAO,MAET,CACEoD,MAAO,iBACPpD,MAAO,SAET,CACEoD,MAAO,OACPpD,MAAO,MAET,CACEoD,MAAO,OACPpD,MAAO,OAGXM,UAAW,CACT,CACE8C,MAAO,YACPpD,MAAO,MAET,CACEoD,MAAO,aACPpD,MAAO,MAET,CACEoD,MAAO,QACPpD,MAAO,KAET,CACEoD,MAAO,OACPpD,MAAO,MAET,CACEoD,MAAO,OACPpD,MAAO,OAGXQ,OAAQ,CACN,CACE4C,MAAO,YACPpD,MAAO,OAET,CACEoD,MAAO,WACPpD,MAAO,MAET,CACEoD,MAAO,OACPpD,MAAO,KAET,CACEoD,MAAO,WACPpD,MAAO,MAET,CACEoD,MAAO,QACPpD,MAAO,MAET,CACEoD,MAAO,QACPpD,MAAO,MAET,CACEoD,MAAO,eACPpD,MAAO,MAET,CACEoD,MAAO,MACPpD,MAAO,MAGXS,UAAW,CACT,CACE2C,MAAO,OACPpD,MAAO,KAET,CACEoD,MAAO,WACPpD,MAAO,MAET,CACEoD,MAAO,QACPpD,MAAO,MAET,CACEoD,MAAO,QACPpD,MAAO,OAGXsD,QAAS,CACP,CACEF,MAAO,MACPpD,MAAO,KAET,CACEoD,MAAO,UACPpD,MAAO,MAET,CACEoD,MAAO,UACPpD,MAAO,MAET,CACEoD,MAAO,UACPpD,MAAO,MAET,CACEoD,MAAO,UACPpD,MAAO,MAET,CACEoD,MAAO,OACPpD,MAAO,KAET,CACEoD,MAAO,WACPpD,MAAO,MAET,CACEoD,MAAO,WACPpD,MAAO,MAET,CACEoD,MAAO,WACPpD,MAAO,MAET,CACEoD,MAAO,WACPpD,MAAO,OAGXuD,eAAgB,CACd,CACEH,MAAO,UACPpD,MAAO,MAET,CACEoD,MAAO,SACPpD,MAAO,KAET,CACEoD,MAAO,SACPpD,MAAO,KAET,CACEoD,MAAO,QACPpD,MAAO,KAET,CACEoD,MAAO,MACPpD,MAAO,OAGXwD,KAAM,CACJ,CACEJ,MAAO,mBACPpD,MAAO,OAET,CACEoD,MAAO,oBACPpD,MAAO,OAET,CACEoD,MAAO,eACPpD,MAAO,MAET,CACEoD,MAAO,UACPpD,MAAO,MAET,CACEoD,MAAO,mBACPpD,MAAO,OAET,CACEoD,MAAO,cACPpD,MAAO,OAET,CACEoD,MAAO,cACPpD,MAAO,OAET,CACEoD,MAAO,OACPpD,MAAO,MAET,CACEoD,MAAO,cACPpD,MAAO,QAGXyD,OAAQ,CACN,CACEL,MAAO,kBACPpD,MAAO,OAET,CACEoD,MAAO,mBACPpD,MAAO,OAET,CACEoD,MAAO,cACPpD,MAAO,MAET,CACEoD,MAAO,YACPpD,MAAO,MAET,CACEoD,MAAO,QACPpD,MAAO,KAET,CACEoD,MAAO,YACPpD,MAAO,MAET,CACEoD,MAAO,kBACPpD,MAAO,OAET,CACEoD,MAAO,eACPpD,MAAO,OAET,CACEoD,MAAO,iBACPpD,MAAO,OAET,CACEoD,MAAO,aACPpD,MAAO,OAET,CACEoD,MAAO,iBACPpD,MAAO,SAET,CACEoD,MAAO,SACPpD,MAAO,OAET,CACEoD,MAAO,iBACPpD,MAAO,OAET,CACEoD,MAAO,kBACPpD,MAAO,MAET,CACEoD,MAAO,mBACPpD,MAAO,OAET,CACEoD,MAAO,aACPpD,MAAO,OAET,CACEoD,MAAO,aACPpD,MAAO,QAGX0D,SAAU,CACR,CACEN,MAAO,SACPpD,MAAO,MAET,CACEoD,MAAO,aACPpD,MAAO,OAET,CACEoD,MAAO,cACPpD,MAAO,OAET,CACEoD,MAAO,aACPpD,MAAO,OAET,CACEoD,MAAO,MACPpD,MAAO,OAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,wBACPpD,MAAO,OAET,CACEoD,MAAO,4BACPpD,MAAO,QAGX2D,MAAO,CACL,CACEP,MAAO,mBACPpD,MAAO,OAET,CACEoD,MAAO,qBACPpD,MAAO,QAET,CACEoD,MAAO,gBACPpD,MAAO,OAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,uBACPpD,MAAO,WAGX4D,KAAM,CACJ,CACER,MAAO,aACPpD,MAAO,MAET,CACEoD,MAAO,cACPpD,MAAO,MAET,CACEoD,MAAO,cACPpD,MAAO,MAET,CACEoD,MAAO,SACPpD,MAAO,KAET,CACEoD,MAAO,SACPpD,MAAO,OAET,CACEoD,MAAO,OACPpD,MAAO,KAET,CACEoD,MAAO,MACPpD,MAAO,KAET,CACEoD,MAAO,OACPpD,MAAO,QAET,CACEoD,MAAO,QACPpD,MAAO,SAET,CACEoD,MAAO,OACPpD,MAAO,SAGX6D,MAAO,CACL,CACET,MAAO,SACPpD,MAAO,OAET,CACEoD,MAAO,SACPpD,MAAO,OAET,CACEoD,MAAO,UACPpD,MAAO,QAET,CACEoD,MAAO,gBACPpD,MAAO,UAET,CACEoD,MAAO,gBACPpD,MAAO,WAGX8D,OAAQ,CACN,CACEV,MAAO,YACPpD,MAAO,MAET,CACEoD,MAAO,gBACPpD,MAAO,OAET,CACEoD,MAAO,gBACPpD,MAAO,OAET,CACEoD,MAAO,gBACPpD,MAAO,OAET,CACEoD,MAAO,gBACPpD,MAAO,OAET,CACEoD,MAAO,QACPpD,MAAO,KAET,CACEoD,MAAO,YACPpD,MAAO,OAGX+D,UAAW,CACT,CACEX,MAAO,QACPpD,MAAO,MAET,CACEoD,MAAO,YACPpD,MAAO,OAET,CACEoD,MAAO,YACPpD,MAAO,OAET,CACEoD,MAAO,YACPpD,MAAO,OAET,CACEoD,MAAO,YACPpD,MAAO,OAET,CACEoD,MAAO,YACPpD,MAAO,OAET,CACEoD,MAAO,wBACPpD,MAAO,OAET,CACEoD,MAAO,oBACPpD,MAAO,SAET,CACEoD,MAAO,oBACPpD,MAAO,UAGXgE,MAAO,CACL,CACEZ,MAAO,SACPpD,MAAO,KAET,CACEoD,MAAO,cACPpD,MAAO,MAET,CACEoD,MAAO,cACPpD,MAAO,QAGXiE,QAAS,CACP,CACEb,MAAO,qBACPpD,MAAO,SAET,CACEoD,MAAO,eACPpD,MAAO,QAET,CACEoD,MAAO,sBACPpD,MAAO,QAET,CACEoD,MAAO,uBACPpD,MAAO,YAET,CACEoD,MAAO,uBACPpD,MAAO,YAET,CACEoD,MAAO,mBACPpD,MAAO,UAET,CACEoD,MAAO,uBACPpD,MAAO,aAGXkE,KAAM,CACJ,CACEd,MAAO,2BACPpD,MAAO,SAET,CACEoD,MAAO,4BACPpD,MAAO,SAET,CACEoD,MAAO,qBACPpD,MAAO,QAET,CACEoD,MAAO,sBACPpD,MAAO,QAET,CACEoD,MAAO,qBACPpD,MAAO,QAET,CACEoD,MAAO,iBACPpD,MAAO,OAET,CACEoD,MAAO,iBACPpD,MAAO,SAET,CACEoD,MAAO,eACPpD,MAAO,OAET,CACEoD,MAAO,qBACPpD,MAAO,QAET,CACEoD,MAAO,qBACPpD,MAAO,UAET,CACEoD,MAAO,mBACPpD,MAAO,QAET,CACEoD,MAAO,uBACPpD,MAAO,QAET,CACEoD,MAAO,uBACPpD,MAAO,UAET,CACEoD,MAAO,4BACPpD,MAAO,SAET,CACEoD,MAAO,uBACPpD,MAAO,SAET,CACEoD,MAAO,uBACPpD,MAAO,SAET,CACEoD,MAAO,sBACPpD,MAAO,SAET,CACEoD,MAAO,sBACPpD,MAAO,WAET,CACEoD,MAAO,oBACPpD,MAAO,SAET,CACEoD,MAAO,0BACPpD,MAAO,WAET,CACEoD,MAAO,0BACPpD,MAAO,aAET,CACEoD,MAAO,wBACPpD,MAAO,WAET,CACEoD,MAAO,kBACPpD,MAAO,SAET,CACEoD,MAAO,gBACPpD,MAAO,SAET,CACEoD,MAAO,gBACPpD,MAAO,WAET,CACEoD,MAAO,gBACPpD,MAAO,SAET,CACEoD,MAAO,2BACPpD,MAAO,QAET,CACEoD,MAAO,4BACPpD,MAAO,SAET,CACEoD,MAAO,4BACPpD,MAAO,WAET,CACEoD,MAAO,0BACPpD,MAAO,SAET,CACEoD,MAAO,sBACPpD,MAAO,SAET,CACEoD,MAAO,sBACPpD,MAAO,WAET,CACEoD,MAAO,oBACPpD,MAAO,SAET,CACEoD,MAAO,sBACPpD,MAAO,SAET,CACEoD,MAAO,sBACPpD,MAAO,WAET,CACEoD,MAAO,oBACPpD,MAAO,UAGXmE,YAAa,CACX,CACEf,MAAO,UACPpD,MAAO,KAET,CACEoD,MAAO,aACPpD,MAAO,KAET,CACEoD,MAAO,SACPpD,MAAO,KAET,CACEoD,MAAO,gBACPpD,MAAO,MAGXoE,YAAa,CACX,CACEhB,MAAO,mBACPpD,MAAO,OAET,CACEoD,MAAO,uBACPpD,MAAO,QAET,CACEoD,MAAO,aACPpD,MAAO,OAET,CACEoD,MAAO,aACPpD,MAAO,OAET,CACEoD,MAAO,yBACPpD,MAAO,SAET,CACEoD,MAAO,iBACPpD,MAAO","file":"js/chunk-8aed7b18.ad9b75bd.js","sourcesContent":["var render = function () {\nvar this$1 = this;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-8 col-sm-8 col-xs-6 q-mb-md q-pr-md\"},[_c('q-input',{ref:\"input\",attrs:{\"type\":\"text\",\"float-label\":_vm.$t('height_label')},model:{value:(_vm.height),callback:function ($$v) {_vm.height=$$v},expression:\"height\"}})],1),_c('div',{staticClass:\"col-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-xs-6 q-pr-md\"},[_c('q-select',{attrs:{\"float-label\":_vm.$t('height_unit'),\"options\":_vm.unit.lengthBMI,\"separator\":true,\"radio\":\"\"},model:{value:(_vm.heightUnit),callback:function ($$v) {_vm.heightUnit=$$v},expression:\"heightUnit\"}})],1)]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-8 col-sm-8 col-xs-6 q-mb-md q-pr-md\"},[_c('q-input',{attrs:{\"type\":\"text\",\"float-label\":_vm.$t('weight_label')},model:{value:(_vm.weight),callback:function ($$v) {_vm.weight=$$v},expression:\"weight\"}})],1),_c('div',{staticClass:\"col-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-xs-6 q-pr-md\"},[_c('q-select',{attrs:{\"float-label\":_vm.$t('weight_unit'),\"options\":_vm.unit.weightBMI,\"separator\":true,\"radio\":\"\"},model:{value:(_vm.weightUnit),callback:function ($$v) {_vm.weightUnit=$$v},expression:\"weightUnit\"}})],1)]),_c('q-btn-toggle',{staticClass:\"q-mt-md q-mb-md\",attrs:{\"text-color\":\"primary\",\"options\":_vm.unit.gender},model:{value:(_vm.gender),callback:function ($$v) {_vm.gender=$$v},expression:\"gender\"}}),_c('br'),(this.height && this.weight)?_c('transition-group',{attrs:{\"enter-active-class\":\"animated fadeIn\"}},[_c('div',{key:\"head\",staticClass:\"q-mt-md q-mb-md\"},[_c('q-list-header',{staticClass:\"q-body-1 q-mt-md\"},[_vm._v(\" \"+_vm._s(_vm.$t('result')))]),_c('q-item-main',[_c('div',{key:\"text\",staticClass:\"parent animate-scale\"},[_c('q-list',{staticClass:\"q-mt-xs no-border-left-right\",attrs:{\"inset-separator\":\"\"}},[_c('q-item',[_c('q-item-side',{attrs:{\"color\":\"black\",\"left\":\"\"}},[_c('span',[_vm._v(\" Status \")])]),_c('q-item-main',{attrs:{\"color\":\"\"}},[_c('span',[_vm._v(\" \"+_vm._s(_vm.bmiMessageCalculate)+\" \")])])],1),_c('q-item-separator'),_c('q-item',[_c('q-item-side',{attrs:{\"color\":\"black\",\"left\":\"\"}},[_c('span',[_vm._v(\" BMI \")])]),_c('q-item-main',{attrs:{\"color\":\"\"}},[_c('span',[_vm._v(\" \"+_vm._s(_vm.bmi)+\" \")])]),_c('q-item-side',{attrs:{\"right\":\"\"}},[_c('q-btn',{directives:[{name:\"clipboard\",rawName:\"v-clipboard\",value:(function () { return this$1.bmi; }),expression:\"() => this.bmi\"}],staticClass:\"absolute-right q-mr-sm\",attrs:{\"id\":\"copy-btn\",\"size\":\"md\",\"flat\":\"\",\"outline\":\"\",\"color\":\"grey\",\"icon\":\"file_copy\"}})],1)],1),_c('q-item-separator'),_c('q-item',[_c('q-item-side',{attrs:{\"color\":\"black\",\"left\":\"\"}},[_c('span',[_vm._v(\" Normal weight  \")])]),_c('q-item-main',{attrs:{\"color\":\"\"}},[_c('span',[_vm._v(\" \"+_vm._s(_vm.minNormalWeight)+\" \"+_vm._s(_vm.weightUnit)+\" to \"+_vm._s(_vm.maxNormalWeight)+\" \"+_vm._s(_vm.weightUnit)+\" \")])])],1),_c('q-item-separator'),_c('q-item',[_c('q-item-side',{attrs:{\"color\":\"black\",\"left\":\"\"}},[_c('span',[_vm._v(\" Robinson Formula \")])]),_c('q-item-main',{attrs:{\"color\":\"\"}},[_c('span',[_vm._v(\" \"+_vm._s(_vm.robinsonFormula)+\" \")])]),_c('q-item-side',{attrs:{\"right\":\"\"}},[_c('q-btn',{directives:[{name:\"clipboard\",rawName:\"v-clipboard\",value:(function () { return this$1.robinsonFormula; }),expression:\"() => this.robinsonFormula\"}],staticClass:\"absolute-right q-mr-sm\",attrs:{\"id\":\"copy-btn\",\"size\":\"md\",\"flat\":\"\",\"outline\":\"\",\"color\":\"grey\",\"icon\":\"file_copy\"}})],1)],1),_c('q-item-separator'),_c('q-item',[_c('q-item-side',{attrs:{\"color\":\"black\",\"left\":\"\"}},[_c('span',[_vm._v(\" Miller Formula \")])]),_c('q-item-main',{attrs:{\"color\":\"\"}},[_c('span',[_vm._v(\" \"+_vm._s(_vm.millerFormula)+\" \")])]),_c('q-item-side',{attrs:{\"right\":\"\"}},[_c('q-btn',{directives:[{name:\"clipboard\",rawName:\"v-clipboard\",value:(function () { return this$1.millerFormula; }),expression:\"() => this.millerFormula\"}],staticClass:\"absolute-right q-mr-sm\",attrs:{\"id\":\"copy-btn\",\"size\":\"md\",\"flat\":\"\",\"outline\":\"\",\"color\":\"grey\",\"icon\":\"file_copy\"}})],1)],1),_c('q-item-separator'),_c('q-item',[_c('q-item-side',{attrs:{\"color\":\"black\",\"left\":\"\"}},[_c('span',[_vm._v(\" Hamwi Formula \")])]),_c('q-item-main',{attrs:{\"color\":\"\"}},[_c('span',[_vm._v(\" \"+_vm._s(_vm.hamwiFormula)+\" \")])]),_c('q-item-side',{attrs:{\"right\":\"\"}},[_c('q-btn',{directives:[{name:\"clipboard\",rawName:\"v-clipboard\",value:(function () { return this$1.hamwiFormula; }),expression:\"() => this.hamwiFormula\"}],staticClass:\"absolute-right q-mr-sm\",attrs:{\"id\":\"copy-btn\",\"size\":\"md\",\"flat\":\"\",\"outline\":\"\",\"color\":\"grey\",\"icon\":\"file_copy\"}})],1)],1),_c('q-item-separator'),_c('q-item',[_c('q-item-side',{attrs:{\"color\":\"black\",\"left\":\"\"}},[_c('span',[_vm._v(\" Devine Formula \")])]),_c('q-item-main',{attrs:{\"color\":\"\"}},[_c('span',[_vm._v(\" \"+_vm._s(_vm.devineFormula)+\" \")])]),_c('q-item-side',{attrs:{\"right\":\"\"}},[_c('q-btn',{directives:[{name:\"clipboard\",rawName:\"v-clipboard\",value:(function () { return this$1.devineFormula; }),expression:\"() => this.devineFormula\"}],staticClass:\"absolute-right q-mr-sm\",attrs:{\"id\":\"copy-btn\",\"size\":\"md\",\"flat\":\"\",\"outline\":\"\",\"color\":\"grey\",\"icon\":\"file_copy\"}})],1)],1)],1)],1)])],1)]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 col-sm-8 col-xs-6 q-mb-md q-pr-md\" >\n        <q-input ref=\"input\" type=\"text\" v-model=\"height\" :float-label=\"$t('height_label')\"/>\n      </div>\n        <div class=\"col-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-xs-6 q-pr-md\">\n          <q-select\n            v-model=\"heightUnit\"\n            :float-label=\"$t('height_unit')\"\n            :options=\"unit.lengthBMI\"\n            :separator=\"true\"\n            radio\n            />\n        </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-8 col-sm-8 col-xs-6 q-mb-md q-pr-md\" >\n        <q-input type=\"text\" v-model=\"weight\" :float-label=\"$t('weight_label')\"/>\n      </div>\n        <div class=\"col-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-xs-6 q-pr-md\">\n          <q-select\n            v-model=\"weightUnit\"\n            :float-label=\"$t('weight_unit')\"\n            :options=\"unit.weightBMI\"\n            :separator=\"true\"\n            radio\n            />\n        </div>\n    </div>\n    <q-btn-toggle\n      v-model=\"gender\"\n      class=\"q-mt-md q-mb-md\"\n      text-color=\"primary\"\n      :options=\"unit.gender\"\n      />\n      <br>\n      <transition-group\n        enter-active-class=\"animated fadeIn\"\n        v-if=\"this.height && this.weight\">\n        <div class=\"q-mt-md q-mb-md\" key=\"head\">\n          <q-list-header class=\"q-body-1 q-mt-md\"> {{ $t('result') }}</q-list-header>\n          <q-item-main>\n            <div class=\"parent animate-scale\" key=\"text\">\n              <q-list inset-separator class=\"q-mt-xs no-border-left-right\">\n                <q-item>\n                  <q-item-side color=\"black\" left>\n                    <span> Status </span>\n                  </q-item-side>\n                  <q-item-main color=\"\">\n                    <span> {{ bmiMessageCalculate }} </span>\n                  </q-item-main>\n                </q-item>\n                <q-item-separator />\n                  <q-item>\n                    <q-item-side color=\"black\" left>\n                      <span> BMI </span>\n                    </q-item-side>\n                    <q-item-main color=\"\">\n                      <span> {{ bmi}} </span>\n                    </q-item-main>\n                    <q-item-side right>\n                      <q-btn class=\"absolute-right q-mr-sm\"\n                             id=\"copy-btn\"\n                             size=\"md\"\n                             flat\n                             outline\n                             color=\"grey\"\n                             icon=\"file_copy\"\n                             v-clipboard=\"() => this.bmi\">\n                      </q-btn>\n                    </q-item-side>\n                  </q-item>\n                  <q-item-separator />\n                    <q-item>\n                      <q-item-side color=\"black\" left>\n                        <span> Normal weight  </span>\n                      </q-item-side>\n                      <q-item-main color=\"\">\n                        <span> {{ minNormalWeight }} {{ weightUnit }} to {{ maxNormalWeight }} {{ weightUnit }} </span>\n                      </q-item-main>\n                    </q-item>\n                    <q-item-separator />\n                      <q-item>\n                        <q-item-side color=\"black\" left>\n                          <span> Robinson Formula </span>\n                        </q-item-side>\n                        <q-item-main color=\"\">\n                          <span> {{ robinsonFormula }} </span>\n                        </q-item-main>\n                        <q-item-side right>\n                          <q-btn class=\"absolute-right q-mr-sm\"\n                                 id=\"copy-btn\"\n                                 size=\"md\"\n                                 flat\n                                 outline\n                                 color=\"grey\"\n                                 icon=\"file_copy\"\n                                 v-clipboard=\"() => this.robinsonFormula\">\n                          </q-btn>\n                        </q-item-side>\n                      </q-item>\n                      <q-item-separator />\n                        <q-item>\n                          <q-item-side color=\"black\" left>\n                            <span> Miller Formula </span>\n                          </q-item-side>\n                          <q-item-main color=\"\">\n                            <span> {{ millerFormula }} </span>\n                          </q-item-main>\n                          <q-item-side right>\n                            <q-btn class=\"absolute-right q-mr-sm\"\n                                   id=\"copy-btn\"\n                                   size=\"md\"\n                                   flat\n                                   outline\n                                   color=\"grey\"\n                                   icon=\"file_copy\"\n                                   v-clipboard=\"() => this.millerFormula\">\n                            </q-btn>\n                          </q-item-side>\n                        </q-item>\n                        <q-item-separator />\n                          <q-item>\n                            <q-item-side color=\"black\" left>\n                              <span> Hamwi Formula </span>\n                            </q-item-side>\n                            <q-item-main color=\"\">\n                              <span> {{ hamwiFormula }} </span>\n                            </q-item-main>\n                            <q-item-side right>\n                              <q-btn class=\"absolute-right q-mr-sm\"\n                                     id=\"copy-btn\"\n                                     size=\"md\"\n                                     flat\n                                     outline\n                                     color=\"grey\"\n                                     icon=\"file_copy\"\n                                     v-clipboard=\"() => this.hamwiFormula\">\n                              </q-btn>\n                            </q-item-side>\n                          </q-item>\n                          <q-item-separator />\n                            <q-item>\n                              <q-item-side color=\"black\" left>\n                                <span> Devine Formula </span>\n                              </q-item-side>\n                              <q-item-main color=\"\">\n                                <span> {{ devineFormula }} </span>\n                              </q-item-main>\n                              <q-item-side right>\n                                <q-btn class=\"absolute-right q-mr-sm\"\n                                       id=\"copy-btn\"\n                                       size=\"md\"\n                                       flat\n                                       outline\n                                       color=\"grey\"\n                                       icon=\"file_copy\"\n                                       v-clipboard=\"() => this.devineFormula\">\n                                </q-btn>\n                              </q-item-side>\n                            </q-item>\n              </q-list>\n            </div>\n          </q-item-main>\n        </div>\n      </transition-group>\n  </div>\n</template>\n\n<script>\nimport { openURL } from 'quasar'\nimport Unit from '@/units'\nimport Knowledge from '@/knowledge'\nimport { mixin } from '@/mixins/mixin'\n\nexport default {\n  name: 'BMI',\n  mixins: [mixin],\n  data () {\n    return {\n      unit: Unit,\n      gender: 'male',\n      height: null,\n      weight: null,\n      weightUnit: this.$config.defaultUnits.weight,\n      heightUnit: this.$config.defaultUnits.height,\n      seen: false,\n      bmiMessage: {\n        underWeight: this.$t('bmi_underWeight'), // 'You are Under weight',\n        normal: this.$t('bmi_normal'), // 'You are Normal',\n        overWeight: this.$t('bmi_overWeight'), // 'You are Overweight',\n        obesity: this.$t('bmi_obesity'), // 'You are Obesity',\n        severeObesity: this.$t('bmi_severeObesity') // 'You are Severe obesity'\n      }\n    }\n  },\n  computed: {\n    weightInKG () {\n      return Knowledge.convert(this.weight, this.weightUnit, 'kg')\n    },\n    heightInMeter () {\n      return Knowledge.convert(this.height, this.heightUnit, 'm')\n    },\n    heightInCentimeter () {\n      return Knowledge.convert(this.height, this.heightUnit, 'cm')\n    },\n    bmi () {\n      let out = null\n      if (this.weight && this.height) {\n        // Main Formula\n        // NOTE: calculate based on KG, Meter\n        out = Knowledge.bmi(this.weightInKG, this.heightInMeter)\n      }\n      return out\n    },\n    bmiMessageCalculate () {\n      let out = null\n      let bmi = Knowledge.bmi(this.weightInKG, this.heightInMeter)\n      if (bmi < 18.5 && (this.height && this.weight)) {\n        out = this.bmiMessage.underWeight\n      } else if (bmi >= 18.5 && bmi < 25) {\n        out = this.bmiMessage.normal\n      } else if (bmi >= 25 && bmi < 30) {\n        out = this.bmiMessage.overWeight\n      } else if (bmi >= 30 && bmi < 35) {\n        out = this.bmiMessage.obesity\n      } else if (bmi >= 35) {\n        out = this.bmiMessage.severeObesity\n      }\n      return out\n    },\n    // Main Formula\n    // NOTE: calculate based on KG, Meter\n    minNormalWeight () {\n      let minNormWeight = Knowledge.minimumNormalWeight(this.heightInMeter)\n      return Knowledge.convert(minNormWeight, 'kg', this.weightUnit).toFixed(2)\n    },\n    maxNormalWeight () {\n      let maxNormWeight = Knowledge.maximumNormalWeight(this.heightInMeter)\n      return Knowledge.convert(maxNormWeight, 'kg', this.weightUnit).toFixed(2)\n    },\n    robinsonFormula () {\n      let out = null\n      // NOTE: calculate based on KG, Centimeter\n      let man = Knowledge.robinsonFormulaMan(this.heightInCentimeter)\n      let women = Knowledge.robinsonFormulaWomen(this.heightInCentimeter)\n      if ((this.height && this.weight) && this.gender === 'male') {\n        out = Knowledge.convert(man, 'kg', this.weightUnit) + ' ' +\n          this.weightUnit\n      } else if ((this.height && this.weight) && this.gender === 'female') {\n        out = Knowledge.convert(women, 'kg', this.weightUnit) + ' ' +\n          this.weightUnit\n      }\n      return out\n    },\n    millerFormula () {\n      let out = null\n      let man = Knowledge.millerFormulaMan(this.heightInCentimeter)\n      let women = Knowledge.millerFormulaWomen(this.heightInCentimeter)\n      if ((this.height && this.weight) && this.gender === 'male') {\n        out = Knowledge.convert(man, 'kg', this.weightUnit) + ' ' +\n          this.weightUnit\n      } else if ((this.height && this.weight) && this.gender === 'female') {\n        out = Knowledge.convert(women, 'kg', this.weightUnit) + ' ' +\n          this.weightUnit\n      }\n      return out\n    },\n    hamwiFormula () {\n      let out = null\n      let man = Knowledge.hamwiFormulaMan(this.heightInCentimeter)\n      let women = Knowledge.hamwiFormulaWomen(this.heightInCentimeter)\n      if ((this.height && this.weight) && this.gender === 'male') {\n        out = Knowledge.convert(man, 'kg', this.weightUnit) + ' ' +\n          this.weightUnit\n      } else if ((this.height && this.weight) && this.gender === 'female') {\n        out = Knowledge.convert(women, 'kg', this.weightUnit) + ' ' +\n          this.weightUnit\n      }\n      return out\n    },\n    devineFormula () {\n      let out = null\n      let man = Knowledge.devineFormulaMan(this.heightInCentimeter)\n      let women = Knowledge.devineFormulaWomen(this.heightInCentimeter)\n      if ((this.height && this.weight) && this.gender === 'male') {\n        out = Knowledge.convert(man, 'kg', this.weightUnit) + ' ' +\n          this.weightUnit\n      } else if ((this.height && this.weight) && this.gender === 'female') {\n        out = Knowledge.convert(women, 'kg', this.weightUnit) + ' ' +\n          this.weightUnit\n      }\n      return out\n    }\n  },\n  methods: {\n    openURL,\n    reset () {\n      this.weight = null\n      this.height = null\n      this.$refs.input.focus()\n    }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BMI.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BMI.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BMI.vue?vue&type=template&id=1bfdd9ad&\"\nimport script from \"./BMI.vue?vue&type=script&lang=js&\"\nexport * from \"./BMI.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default {\n  gender: [\n    {\n      label: 'Male',\n      value: 'male'\n    },\n    {\n      label: 'Female',\n      value: 'female'\n    }\n  ],\n  length: [\n    {\n      label: 'Milimetre',\n      value: 'mm'\n    },\n    {\n      label: 'Centimetre',\n      value: 'cm'\n    },\n    {\n      label: 'Metre',\n      value: 'm'\n    },\n    {\n      label: 'Kilometre',\n      value: 'km'\n    },\n    {\n      label: 'Foot',\n      value: 'ft'\n    },\n    {\n      label: 'Us survey foot',\n      value: 'ft-us'\n    },\n    {\n      label: 'Inch',\n      value: 'in'\n    },\n    {\n      label: 'Mile',\n      value: 'mi'\n    }\n  ],\n  lengthBMI: [\n    {\n      label: 'Milimetre',\n      value: 'mm'\n    },\n    {\n      label: 'Centimetre',\n      value: 'cm'\n    },\n    {\n      label: 'Metre',\n      value: 'm'\n    },\n    {\n      label: 'Foot',\n      value: 'ft'\n    },\n    {\n      label: 'Inch',\n      value: 'in'\n    }\n  ],\n  weight: [\n    {\n      label: 'Microgram',\n      value: 'mcg'\n    },\n    {\n      label: 'Miligram',\n      value: 'mg'\n    },\n    {\n      label: 'Gram',\n      value: 'g'\n    },\n    {\n      label: 'Kilogram',\n      value: 'kg'\n    },\n    {\n      label: 'Pound',\n      value: 'lb'\n    },\n    {\n      label: 'Ounce',\n      value: 'oz'\n    },\n    {\n      label: 'Metric tonne',\n      value: 'mt'\n    },\n    {\n      label: 'Ton',\n      value: 't'\n    }\n  ],\n  weightBMI: [\n    {\n      label: 'Gram',\n      value: 'g'\n    },\n    {\n      label: 'Kilogram',\n      value: 'kg'\n    },\n    {\n      label: 'Pound',\n      value: 'lb'\n    },\n    {\n      label: 'Ounce',\n      value: 'oz'\n    }\n  ],\n  digital: [\n    {\n      label: 'Bit',\n      value: 'b'\n    },\n    {\n      label: 'Kilobit',\n      value: 'Kb'\n    },\n    {\n      label: 'Megabit',\n      value: 'Mb'\n    },\n    {\n      label: 'Gigabit',\n      value: 'Gb'\n    },\n    {\n      label: 'Terabit',\n      value: 'Tb'\n    },\n    {\n      label: 'Byte',\n      value: 'B'\n    },\n    {\n      label: 'Kilobyte',\n      value: 'KB'\n    },\n    {\n      label: 'Megabyte',\n      value: 'MB'\n    },\n    {\n      label: 'Gigabyte',\n      value: 'GB'\n    },\n    {\n      label: 'Terabyte',\n      value: 'TB'\n    }\n  ],\n  numericalBases: [\n    {\n      label: 'Decimal',\n      value: '10'\n    },\n    {\n      label: 'Binary',\n      value: '2'\n    },\n    {\n      label: 'Senary',\n      value: '6'\n    },\n    {\n      label: 'Octal',\n      value: '8'\n    },\n    {\n      label: 'Hex',\n      value: '16'\n    }\n  ],\n  area: [\n    {\n      label: 'Square milimetre',\n      value: 'mm2'\n    },\n    {\n      label: 'Square centimetre',\n      value: 'cm2'\n    },\n    {\n      label: 'Square metre',\n      value: 'm2'\n    },\n    {\n      label: 'Hectare',\n      value: 'ha'\n    },\n    {\n      label: 'Square kilometre',\n      value: 'km2'\n    },\n    {\n      label: 'Square inch',\n      value: 'in2'\n    },\n    {\n      label: 'Square foot',\n      value: 'ft2'\n    },\n    {\n      label: 'Acre',\n      value: 'ac'\n    },\n    {\n      label: 'Square mile',\n      value: 'mi2'\n    }\n  ],\n  volume: [\n    {\n      label: 'Cubic milimetre',\n      value: 'mm3'\n    },\n    {\n      label: 'Cubic centimetre',\n      value: 'cm3'\n    },\n    {\n      label: 'Cubic metre',\n      value: 'm3'\n    },\n    {\n      label: 'Mililitre',\n      value: 'ml'\n    },\n    {\n      label: 'Litre',\n      value: 'l'\n    },\n    {\n      label: 'Kilolitre',\n      value: 'kl'\n    },\n    {\n      label: 'Cubic kilometre',\n      value: 'km3'\n    },\n    {\n      label: 'Us tea spoon',\n      value: 'tsp'\n    },\n    {\n      label: 'Us table spoon',\n      value: 'Tbs'\n    },\n    {\n      label: 'Cubic inch',\n      value: 'in3'\n    },\n    {\n      label: 'Us fluid ounce',\n      value: 'fl-oz'\n    },\n    {\n      label: 'Us cup',\n      value: 'cup'\n    },\n    {\n      label: 'Us liquid pint',\n      value: 'pnt'\n    },\n    {\n      label: 'Us liquid quart',\n      value: 'qt'\n    },\n    {\n      label: 'Us liquid gallon',\n      value: 'gal'\n    },\n    {\n      label: 'Cubic foot',\n      value: 'ft3'\n    },\n    {\n      label: 'Cubic yard',\n      value: 'yd3'\n    }\n  ],\n  pressure: [\n    {\n      label: 'Pascal',\n      value: 'Pa'\n    },\n    {\n      label: 'Kilopascal',\n      value: 'kPa'\n    },\n    {\n      label: 'Hectopascal',\n      value: 'hPa'\n    },\n    {\n      label: 'Megapascal',\n      value: 'MPa'\n    },\n    {\n      label: 'Bar',\n      value: 'bar'\n    },\n    {\n      label: 'Torr',\n      value: 'torr'\n    },\n    {\n      label: 'Pound per square inch',\n      value: 'psi'\n    },\n    {\n      label: 'Kilopound per square inch',\n      value: 'ksi'\n    }\n  ],\n  speed: [\n    {\n      label: 'Metre per second',\n      value: 'm/s'\n    },\n    {\n      label: 'Kilometre per hour',\n      value: 'km/h'\n    },\n    {\n      label: 'Mile per hour',\n      value: 'm/h'\n    },\n    {\n      label: 'Knot',\n      value: 'knot'\n    },\n    {\n      label: 'Minute per kilometre',\n      value: 'min/km'\n    }\n  ],\n  time: [\n    {\n      label: 'Nanosecond',\n      value: 'ns'\n    },\n    {\n      label: 'Microsecond',\n      value: 'mu'\n    },\n    {\n      label: 'Millisecond',\n      value: 'ms'\n    },\n    {\n      label: 'Second',\n      value: 's'\n    },\n    {\n      label: 'Minute',\n      value: 'min'\n    },\n    {\n      label: 'Hour',\n      value: 'h'\n    },\n    {\n      label: 'Day',\n      value: 'd'\n    },\n    {\n      label: 'Week',\n      value: 'week'\n    },\n    {\n      label: 'Month',\n      value: 'month'\n    },\n    {\n      label: 'Year',\n      value: 'year'\n    }\n  ],\n  angle: [\n    {\n      label: 'Degree',\n      value: 'deg'\n    },\n    {\n      label: 'Radian',\n      value: 'rad'\n    },\n    {\n      label: 'Gradian',\n      value: 'grad'\n    },\n    {\n      label: 'Minute of arc',\n      value: 'arcmin'\n    },\n    {\n      label: 'Second of arc',\n      value: 'arcsec'\n    }\n  ],\n  energy: [\n    {\n      label: 'Watt hour',\n      value: 'Wh'\n    },\n    {\n      label: 'Miliwatt hour',\n      value: 'mWh'\n    },\n    {\n      label: 'Kilowatt hour',\n      value: 'kWh'\n    },\n    {\n      label: 'Megawatt hour',\n      value: 'MWh'\n    },\n    {\n      label: 'Gigawatt hour',\n      value: 'GWh'\n    },\n    {\n      label: 'Joule',\n      value: 'J'\n    },\n    {\n      label: 'Kilojoule',\n      value: 'kJ'\n    }\n  ],\n  frequency: [\n    {\n      label: 'Hertz',\n      value: 'Hz'\n    },\n    {\n      label: 'Milihertz',\n      value: 'mHz'\n    },\n    {\n      label: 'Kilohertz',\n      value: 'kHz'\n    },\n    {\n      label: 'Megahertz',\n      value: 'MHz'\n    },\n    {\n      label: 'Gigahertz',\n      value: 'GHz'\n    },\n    {\n      label: 'Terahertz',\n      value: 'THz'\n    },\n    {\n      label: 'Revolution per minute',\n      value: 'rpm'\n    },\n    {\n      label: 'Degree per second',\n      value: 'deg/s'\n    },\n    {\n      label: 'Radian per second',\n      value: 'rad/s'\n    }\n  ],\n  force: [\n    {\n      label: 'Newton',\n      value: 'N'\n    },\n    {\n      label: 'Kilo newton',\n      value: 'kN'\n    },\n    {\n      label: 'Pound-force',\n      value: 'lbf'\n    }\n  ],\n  density: [\n    {\n      label: 'Kg per cubic meter',\n      value: 'kg/m3'\n    },\n    {\n      label: 'Kg per litre',\n      value: 'kg/l'\n    },\n    {\n      label: 'Ton per cubic meter',\n      value: 't/m3'\n    },\n    {\n      label: 'Pound per cubic yard',\n      value: 'lb/cu-yd'\n    },\n    {\n      label: 'Pound per cubic feet',\n      value: 'lb/cu-ft'\n    },\n    {\n      label: 'Pound per gallon',\n      value: 'lb/gal'\n    },\n    {\n      label: 'Ounce per cubic inch',\n      value: 'oz/cu-in'\n    }\n  ],\n  flow: [\n    {\n      label: 'Cubic milimetre / Second',\n      value: 'mm3/s'\n    },\n    {\n      label: 'cubic centimetre / Second',\n      value: 'cm3/s'\n    },\n    {\n      label: 'Mililitre / Second',\n      value: 'ml/s'\n    },\n    {\n      label: 'Centilitre / Second',\n      value: 'cl/s'\n    },\n    {\n      label: 'Decilitre / Second',\n      value: 'dl/s'\n    },\n    {\n      label: 'Litre / Second',\n      value: 'l/s'\n    },\n    {\n      label: 'Litre / Minute',\n      value: 'l/min'\n    },\n    {\n      label: 'Litre / hour',\n      value: 'l/h'\n    },\n    {\n      label: 'Kilolitre / Second',\n      value: 'kl/s'\n    },\n    {\n      label: 'Kilolitre / Minute',\n      value: 'kl/min'\n    },\n    {\n      label: 'Kilolitre / Hour',\n      value: 'kl/h'\n    },\n    {\n      label: 'Cubic Metre / Second',\n      value: 'm3/s'\n    },\n    {\n      label: 'cubic Metre / Minute',\n      value: 'm3/min'\n    },\n    {\n      label: 'Cubic kilo Metre / Second',\n      value: 'km3/s'\n    },\n    {\n      label: 'Us teaspoon / Second',\n      value: 'tsp/s'\n    },\n    {\n      label: 'Tablespoons / Second',\n      value: 'Tbs/s'\n    },\n    {\n      label: 'Cubic inch / Second',\n      value: 'in3/s'\n    },\n    {\n      label: 'Cubic inch / Minute',\n      value: 'in3/min'\n    },\n    {\n      label: 'Cubic inch / hour',\n      value: 'in3/h'\n    },\n    {\n      label: 'Us fluid ounce / Second',\n      value: 'fl-oz/s'\n    },\n    {\n      label: 'Us fluid ounce / Minute',\n      value: 'fl-oz/min'\n    },\n    {\n      label: 'Us fluid ounce / Hour',\n      value: 'fl-oz/h'\n    },\n    {\n      label: 'Us cup / Second',\n      value: 'cup/s'\n    },\n    {\n      label: 'Pint / Second',\n      value: 'pnt/s'\n    },\n    {\n      label: 'Pint / Second',\n      value: 'pnt/min'\n    },\n    {\n      label: 'Pint / Second',\n      value: 'pnt/h'\n    },\n    {\n      label: 'Us liquid quart / Second',\n      value: 'qt/s'\n    },\n    {\n      label: 'Us liquid gallon / Second',\n      value: 'gal/s'\n    },\n    {\n      label: 'Us liquid gallon / Minute',\n      value: 'gal/min'\n    },\n    {\n      label: 'Us liquid gallon / hour',\n      value: 'gal/h'\n    },\n    {\n      label: 'Cubic foot / Second',\n      value: 'ft3/s'\n    },\n    {\n      label: 'Cubic foot / Minute',\n      value: 'ft3/min'\n    },\n    {\n      label: 'Cubic foot / Hour',\n      value: 'ft3/h'\n    },\n    {\n      label: 'Cubic yard / Second',\n      value: 'yd3/s'\n    },\n    {\n      label: 'cubic yard / Minute',\n      value: 'yd3/min'\n    },\n    {\n      label: 'Cubic yard / Hour',\n      value: 'yd3/h'\n    }\n  ],\n  temperature: [\n    {\n      label: 'Celsius',\n      value: 'C'\n    },\n    {\n      label: 'Fahrenheit',\n      value: 'F'\n    },\n    {\n      label: 'Kelvin',\n      value: 'K'\n    },\n    {\n      label: 'Rankine scale',\n      value: 'R'\n    }\n  ],\n  aspectRatio: [\n    {\n      label: 'SVGA / XGA (4:3)',\n      value: '4:3'\n    },\n    {\n      label: '4K / HD / FHD (16:9)',\n      value: '16:9'\n    },\n    {\n      label: 'WXGA (5:3)',\n      value: '5:3'\n    },\n    {\n      label: 'SXGA (5:4)',\n      value: '5:4'\n    },\n    {\n      label: 'WXGA+ / WSXGA+ (16:10)',\n      value: '16:10'\n    },\n    {\n      label: 'WSVGA (~17:10)',\n      value: '17:10'\n    }\n  ]\n}\n"],"sourceRoot":""}